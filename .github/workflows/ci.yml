# SPDX-FileCopyrightText: 2022 - 2024 Peter Urban, Ghent University
#
# SPDX-License-Identifier: CC0-1.0

name: CI

on:
  push:
    branches: [ main ]
    
  pull_request:
    branches: [ main ]
    

# make sure that multiple jobs don't run for the same action (new commits cancel old jobs when they are still running)
# Souce Ralf Gommers (commit to meson-python)
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

  
jobs:
  linux:
    name: ci on ${{matrix.container}} (${{matrix.library_type}})
    strategy:
      fail-fast: false
      matrix:
        container: ['ubuntu:22.04', 'ubuntu:22.10']
        library_type: ['shared', 'static']
    
    runs-on: ubuntu-latest
    container: ${{matrix.container}}

    steps:
    - name: install perquisites
      run: apt update && apt-get install -y sudo git

    - name: checkout main repository
      uses: actions/checkout@v3
      with:
        submodules: recursive
        lfs: false

    - name: install dependencies (c++)
      run: sudo DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential pkg-config python3-pip
      
    - name: install dependencies (meson & python)
      run: pip install meson ninja --break-system-packages

    - name: configure meson
      run: meson setup builddir/; meson configure builddir -Dprefix=/usr/ --default-library=${{matrix.library_type}}

    - name: compile project
      run: meson compile -C builddir/

    - name: test (cpp)
      run: meson test -C builddir/ --print-errorlogs
    

  build-on-windows:
    name: ci on windows
    strategy:
      fail-fast: false
      matrix:
        library_type: [shared, static]
        include:
          - toolset: vc143
            compiler: clang-cl
          # - toolset: msvc
          #   compiler: sccache cl
            
          
    env:
      CC: ${{matrix.compiler}}
      CXX: ${{matrix.compiler}}
      #this is where we will download ninja later
      NINJA: d:/ninja.exe

    runs-on: windows-latest

    steps:
    - name: setup python
      uses: actions/setup-python@v3
      with:
        python-version: '3.11'

    - name: Set up Clang
      uses: egor-tensin/setup-clang@v1
      with:
        version: latest
    
    # make sure meson can find msvc
    - uses: TheMrMilchmann/setup-msvc-dev@v2
      with:
        arch: x64
        #toolset: 14.34

    - name: checkout main repository
      uses: actions/checkout@v3
      with:
        submodules: recursive
        lfs: false

    - name: install dependencies (meson & python)
      run: pip install meson ninja

    # - name: download ninja long path
    #   run : |
    #     Invoke-WebRequest -Uri https://raw.githubusercontent.com/themachinethatgoesping/tools/main/ninja-windows/ninja.exe -OutFile d:\ninja.exe

    # - name: check ninja executable path
    #   run: |
    #     $env:NINJA
    #     d:\ninja.exe --version

    - name: configure meson
      run: meson setup builddir/; meson configure builddir -Dprefix=/usr/ --default-library=${{matrix.library_type}}

    - name: compile project
      run: meson compile -C builddir/

    - name: test (cpp)
      run: meson test -C builddir/ --print-errorlogs 
      # meson test does not work with the custom ninja executable
      #run: ninja test -C builddir/ --verbose


  macos:
    name: ci on macOS
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        library_type: [shared, static]
        cxx_compiler: ["$(brew --prefix llvm@16)/bin/clang++"]            
    
    # env does not work here because is resolved as string and not command 
    # env:
    #   CXX: ${{ matrix.cxx_compiler }}
      
    steps:
    
    - uses: actions/setup-python@v3
      with:
        python-version: '3.11'
        
    - name: checkout main repository
      uses: actions/checkout@v3
      with:
        submodules: recursive
        lfs: false

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: super-ci-mac  # name for the cache
        
    # install clang 15
    - run: brew install coreutils llvm@16
            
    - run: pip install meson ninja
    
    - name: configure meson
      run: CXX=${{ matrix.cxx_compiler }} meson setup builddir/; meson configure builddir --default-library=${{matrix.library_type}}

    - name: compile project
      run: meson compile -C builddir/

    - name: test (cpp)
      run: meson test -C builddir/ --print-errorlogs
